{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","usersFromServer","find","TodoList","todos","map","App","useState","todosFromServer","setTodos","todoTitle","setTodoTitle","setUserId","requiredTodoTitle","setRequiredTodoTitle","requiredUserId","setRequiredUserId","action","method","onSubmit","event","preventDefault","newTodo","reduce","max","addTodo","type","placeholder","value","onChange","currentTarget","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70c09d28.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | undefined;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      { user?.name }\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const findUser = (userId: number): User | undefined => {\n    return usersFromServer.find(user => user.id === userId);\n  };\n\n  return (\n    <article\n      key={todo.id}\n      data-id={todo.id}\n      className={\n        classNames('TodoInfo', { 'TodoInfo--completed': todo.completed })\n      }\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo\n        user={findUser(todo.userId)}\n      />\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport const App = () => {\n  const [todos, setTodos] = useState([...todosFromServer]);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [userId, setUserId] = useState('');\n  const [requiredTodoTitle, setRequiredTodoTitle] = useState(false);\n  const [requiredUserId, setRequiredUserId] = useState(false);\n\n  const addTodo = () => {\n    const newTodo = {\n      id: todos.reduce((max, todo) => (max < todo.id ? todo.id : max), 0) + 1,\n      title: todoTitle,\n      completed: false,\n      userId: +userId,\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (todoTitle === '') {\n      setRequiredTodoTitle(true);\n    }\n\n    if (userId === '') {\n      setRequiredUserId(true);\n    }\n\n    if (userId === '' || todoTitle === '') {\n      return;\n    }\n\n    addTodo();\n    setTodoTitle('');\n    setUserId('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter text\"\n            value={todoTitle}\n            onChange={(event) => {\n              setTodoTitle(event.currentTarget.value);\n              setRequiredTodoTitle(false);\n            }}\n          />\n          <span className=\"error\">\n            {requiredTodoTitle && 'Please enter a title'}\n          </span>\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(event.currentTarget.value);\n              setRequiredUserId(false);\n            }}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          <span className=\"error\">\n            {requiredUserId && 'Please choose a user'}\n          </span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}